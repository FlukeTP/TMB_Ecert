
package com.tmb.payment.wsdl.dbd;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;

/**
 * This class was generated by Apache CXF 3.2.6
 * 2018-10-11T17:37:35.494+07:00
 * Generated source version: 3.2.6
 *
 */
public final class DbdPayment_DbdPaymentPort_Client {

    private static final QName SERVICE_NAME = new QName("http://service.payment.dbd.gov/", "DbdPaymentService");

    private DbdPayment_DbdPaymentPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = DbdPaymentService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) {
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }

        DbdPaymentService ss = new DbdPaymentService(wsdlURL, SERVICE_NAME);
        DbdPayment port = ss.getDbdPaymentPort();

        {
        System.out.println("Invoking realTimePayment...");
        com.tmb.payment.wsdl.dbd.PaymentPayLoad _realTimePayment_message = null;
        java.lang.String _realTimePayment__return = port.realTimePayment(_realTimePayment_message);
        System.out.println("realTimePayment.result=" + _realTimePayment__return);


        }
        {
        System.out.println("Invoking approveBeforePay...");
        java.lang.String _approveBeforePay_bankCode = "";
        java.lang.String _approveBeforePay_serviceCode = "";
        java.lang.String _approveBeforePay_ref1 = "";
        java.lang.String _approveBeforePay_ref2 = "";
        float _approveBeforePay_amount = 0.0f;
        java.lang.String _approveBeforePay__return = port.approveBeforePay(_approveBeforePay_bankCode, _approveBeforePay_serviceCode, _approveBeforePay_ref1, _approveBeforePay_ref2, _approveBeforePay_amount);
        System.out.println("approveBeforePay.result=" + _approveBeforePay__return);


        }

        System.exit(0);
    }

}
